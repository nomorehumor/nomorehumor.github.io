{"version":3,"sources":["app/stations/direction/DirectionArrow.js","app/stations/Stations.js","app/App.js","index.js"],"names":["DirectionArrow","props","_useState","useState","_useState2","Object","slicedToArray","compass","setCompass","compassHandler","e","compassValue","webkitCompassHeading","Math","abs","alpha","console","log","navigator","userAgent","match","DeviceOrientationEvent","requestPermission","then","response","window","addEventListener","alert","catch","react_default","a","createElement","Stations","_this","classCallCheck","this","_super","call","state","stations","stationName","_step","_iterator","createForOfIteratorHelper","s","n","done","value","err","f","_step2","stationsCopy","slice","_iterator2","element","length","isStationInList","push","name","id","latitude","longitude","types","setState","_this2","params","URLSearchParams","key","process","location","rankby","type","fetch","concat","method","headers","Content-Type","json","data","updateStationsFromResponse","reloadStationsList","Stations_StationsList","currentLongitude","currentLatitude","React","Component","StationsList","_super2","_this3","map","Stations_Station","station","Stack","direction","justifyContent","alignItems","spacing","getStations","Station","_this4","_super3","distance","duration","requestDistanceAPI","includes","firstElement","newState","_this5","destinations","origins","mode","handleDistanceResponse","Paper","variant","elevation","Box","sx","width","height","fontFamily","fontWeight","fontSize","padding","borderRadius","className","isTrainStation","src","isBusStation","App","setLatitude","_useState3","_useState4","setLongitude","geolocation","getCurrentPosition","position","coords","AppBar","color","app_stations_Stations","renderStations","href","title","require","config","ReactDOM","render","src_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.16f97eb4.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nexport function DirectionArrow(props) {\r\n\r\n    var [compass, setCompass] = useState(null)\r\n\r\n    var startCompass = () => {\r\n        const isIOS = (\r\n            navigator.userAgent.match(/(iPod|iPhone|iPad)/) &&\r\n            navigator.userAgent.match(/AppleWebKit/)\r\n        );\r\n    \r\n        if (isIOS) {\r\n        DeviceOrientationEvent.requestPermission()\r\n            .then((response) => {\r\n            if (response === \"granted\") {\r\n                window.addEventListener(\"deviceorientation\", compassHandler, true);\r\n            } else {\r\n                alert(\"has to be allowed!\");\r\n            }\r\n            })\r\n            .catch(() => alert(\"Compass not supported\"));\r\n        } else {\r\n            window.addEventListener(\"deviceorientationabsolute\", compassHandler, true);\r\n        }\r\n    }\r\n\r\n    var compassHandler = (e) => {\r\n        let compassValue = e.webkitCompassHeading || Math.abs(e.alpha - 360);\r\n        console.log(compassValue)\r\n        setCompass(compassValue)\r\n        // compassCircle.style.transform = `translate(-50%, -50%) rotate(${-compass}deg)`;\r\n    }\r\n\r\n    startCompass();\r\n\r\n    return <div>\r\n        compass {compass}\r\n    </div>\r\n}\r\n","import { Paper, Stack } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react'\r\nimport { DirectionArrow } from './direction/DirectionArrow';\r\nimport \"./Stations.css\"\r\n\r\nlet googleNearbyAPI = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\";\r\nconst googleDistanceAPI = \"https://maps.googleapis.com/maps/api/distancematrix/json?\"\r\n\r\nconst MAX_STATION_AMOUNT = 10;\r\n\r\n\r\nclass Stations extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            stations: []\r\n        }\r\n    }\r\n\r\n    isStationInList(stations, stationName) {\r\n        for (const station of stations) {\r\n            if (station[\"name\"] === stationName)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateStationsFromResponse(response) {\r\n        var stationsCopy = this.state.stations.slice()\r\n\r\n        for (const element of response['results']) {\r\n            if (stationsCopy.length >= MAX_STATION_AMOUNT)\r\n                break\r\n\r\n            if (!this.isStationInList(stationsCopy, element[\"name\"])){\r\n                stationsCopy.push(\r\n                    {\r\n                        \"name\": element[\"name\"],\r\n                        \"id\": element[\"place_id\"],\r\n                        \"latitude\": element[\"geometry\"][\"location\"][\"lat\"],\r\n                        \"longitude\": element[\"geometry\"][\"location\"][\"lng\"],\r\n                        \"types\": element[\"types\"],\r\n                    }\r\n                )\r\n            }\r\n        }\r\n\r\n        this.setState({stations: stationsCopy})\r\n    }\r\n\r\n    reloadStationsList() {\r\n\r\n        var params = new URLSearchParams({\r\n            key: process.env.REACT_APP_GOOGLE_API_KEY,\r\n            location: this.props.latitude + \", \" + this.props.longitude,\r\n            rankby: \"distance\",\r\n            type: \"train_station\"\r\n        })\r\n        const apiRequest = googleNearbyAPI + params\r\n\r\n        fetch(\r\n            process.env.REACT_APP_CORS_PROXY_URL.concat(apiRequest), \r\n            {\r\n                method: 'GET',\r\n                headers: {'Content-Type':'application/json'},\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => this.updateStationsFromResponse(data))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadStationsList()\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n                    <div>Current location: {this.props.latitude} {this.props.longitude}</div>\r\n                    <DirectionArrow></DirectionArrow>\r\n                    {/* <React.StrictMode> */}\r\n                        <StationsList stations={this.state.stations} currentLongitude={this.props.longitude} currentLatitude={this.props.latitude}></StationsList>\r\n                    {/* </React.StrictMode> */}\r\n                </div>;\r\n    }\r\n}\r\n\r\n\r\nexport default Stations;\r\n\r\nclass StationsList extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    getStations() {\r\n        return this.props.stations.map(element => {\r\n            return <Station \r\n                name={element[\"name\"]} key={element[\"id\"]} \r\n                station={element}\r\n                currentLatitude={ this.props.currentLatitude } currentLongitude={this.props.currentLongitude}>\r\n            </Station>\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return <Stack\r\n            direction=\"column\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={2}>\r\n                {this.getStations()}\r\n            </Stack>;\r\n    }\r\n}\r\n\r\nclass Station extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                distance: \"\",\r\n                duration: \"\"\r\n            }\r\n            this.requestDistanceAPI()\r\n        }\r\n    \r\n        isBusStation() {\r\n            return this.props.station[\"types\"].includes(\"bus_station\")\r\n        }\r\n    \r\n        isTrainStation() {\r\n            return this.props.station[\"types\"].includes(\"train_station\")\r\n        }\r\n    \r\n        handleDistanceResponse(response) {\r\n            if (response[\"rows\"].length === 0 || response[\"rows\"][0][\"elements\"].length === 0) {\r\n                return\r\n            }\r\n    \r\n            var firstElement = response[\"rows\"][0][\"elements\"][0]\r\n    \r\n            var newState = {\r\n                distance: firstElement[\"distance\"][\"text\"],\r\n                duration: firstElement[\"duration\"][\"text\"]\r\n            }\r\n    \r\n            this.setState(newState);\r\n        }\r\n    \r\n        requestDistanceAPI() {\r\n            var params = new URLSearchParams({\r\n                key: process.env.REACT_APP_GOOGLE_API_KEY,\r\n                destinations: \"place_id:\" + this.props.station[\"id\"],\r\n                origins: this.props.currentLatitude + \", \" + this.props.currentLongitude,\r\n                mode: \"walking\"\r\n            })\r\n            const apiRequest = googleDistanceAPI + params\r\n\r\n            fetch(process.env.REACT_APP_CORS_PROXY_URL.concat(apiRequest))\r\n            .then(response => response.json())\r\n            .then(data => this.handleDistanceResponse(data))\r\n        }\r\n\r\n        componentDidMount() {\r\n            \r\n        }\r\n    \r\n        render() {\r\n            return  <Paper variant=\"elevation\" elevation={4}>\r\n                        <Box sx={{width: 300, height: 100, fontFamily: \"Jetbrains Mono, monospace\", fontWeight: 600, fontSize: \"1.2em\", padding: \"10px\", borderRadius: \"10px\"}}>\r\n                            <div className=\"station-box\">\r\n                                <div>\r\n                                    <div>\r\n                                        {\r\n                                            this.isTrainStation() &&\r\n                                            <img className=\"transport-icon\" src={\"/train-public-transport.png\"} />\r\n                                        }\r\n                                        {\r\n                                            this.isBusStation() &&\r\n                                            <img className=\"transport-icon\" src={\"/bus-public-transport.png\"} />\r\n                                        }\r\n                                    </div>\r\n                                    <div>{this.props.name}</div>\r\n                                    <div className=\"station-info\">\r\n                                        <div>{this.state.distance}</div>\r\n                                        <div>{this.state.duration}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Box>\r\n                    </Paper>\r\n        }\r\n    }\r\n\r\n\r\n// function getLocation(setLatitude, setLongitude) {\r\n//     if(navigator.geolocation) {\r\n//         navigator.geolocation.getCurrentPosition(function(position) {\r\n//           setLatitude(position.coords.latitude)\r\n//           setLongitude(position.coords.longitude)\r\n//         })\r\n//     } else {\r\n//         alert(\"Sorry, your browser does not support HTML5 geolocation.\");\r\n//     }\r\n// }\r\n\r\n","import './App.css';\nimport Stations from \"./stations/Stations\"\nimport React, { useState } from 'react';\nimport { AppBar } from '@mui/material';\n\nconst App = () => {\n\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n\n  if(navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      setLatitude(position.coords.latitude)\n      setLongitude(position.coords.longitude)\n    })\n  } else {\n    alert(\"Sorry, your browser does not support HTML5 geolocation.\");\n  }\n\n  var renderStations = () => {\n    if (latitude != null && longitude != null) {\n      return <Stations latitude={latitude} longitude={longitude}></Stations>;\n    }\n  }\n\n  return (\n    <div>\n      <header>\n        <AppBar className='App-header' position=\"static\" color=\"default\" variant=\"elevation\">\n          <img className='bar-logo' src='/icon.png'></img>\n          <span>City Navigator</span>\n        </AppBar>\n      </header>\n      <main>\n        {renderStations()}\n      </main>\n      <footer><a href=\"https://www.flaticon.com/free-icons/\" title=\"icons\">Icons created by Google - Flaticon</a></footer>\n    </div>\n  );\n}\n  \n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App'\nimport './index.css';\n\nrequire('dotenv').config()\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}