{"version":3,"sources":["app/stations/direction/DirectionArrow.js","app/stations/Stations.js","app/App.js","index.js"],"names":["DirectionArrow","_React$Component","Object","inherits","_super","createSuper","props","_this","classCallCheck","this","call","state","compass","createClass","key","value","startCompass","_this2","isIOS","navigator","userAgent","match","console","log","DeviceOrientationEvent","requestPermission","then","response","window","addEventListener","compassHandler","alert","catch","e","webkitCompassHeading","Math","abs","alpha","setState","react_default","a","createElement","React","Component","Stations","stations","stationName","_step","_iterator","createForOfIteratorHelper","s","n","done","err","f","_step2","stationsCopy","slice","_iterator2","element","length","isStationInList","push","name","id","latitude","longitude","types","params","URLSearchParams","process","location","rankby","type","fetch","concat","method","headers","Content-Type","json","data","updateStationsFromResponse","reloadStationsList","DirectionArrow_DirectionArrow","Stations_StationsList","currentLongitude","currentLatitude","StationsList","_super2","_this3","map","Stations_Station","station","Stack","direction","justifyContent","alignItems","spacing","getStations","Station","_this4","_super3","distance","duration","requestDistanceAPI","includes","firstElement","newState","_this5","destinations","origins","mode","handleDistanceResponse","Paper","variant","elevation","Box","sx","width","height","fontFamily","fontWeight","fontSize","padding","borderRadius","className","isTrainStation","src","isBusStation","App","_useState","useState","_useState2","slicedToArray","setLatitude","_useState3","_useState4","setLongitude","geolocation","getCurrentPosition","position","coords","AppBar","color","app_stations_Stations","renderStations","href","title","require","config","ReactDOM","render","src_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.4b72af75.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport class DirectionArrow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            compass: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startCompass()\r\n    }\r\n\r\n    startCompass() {\r\n        const isIOS = (\r\n            navigator.userAgent.match(/(iPod|iPhone|iPad)/) &&\r\n            navigator.userAgent.match(/AppleWebKit/)\r\n        );\r\n    \r\n        console.log(\"ios: \" + isIOS)\r\n        if (isIOS) {\r\n          DeviceOrientationEvent.requestPermission()\r\n            .then((response) => {\r\n              if (response === \"granted\") {\r\n                window.addEventListener(\"deviceorientation\", this.compassHandler, true);\r\n              } else {\r\n                alert(\"has to be allowed!\");\r\n              }\r\n            })\r\n            .catch(() => alert(\"not supported\"));\r\n        } else {\r\n          window.addEventListener(\"deviceorientationabsolute\", this.compassHandler, true);\r\n        }\r\n    }\r\n\r\n    compassHandler(e) {\r\n        let compass = e.webkitCompassHeading || Math.abs(e.alpha - 360);\r\n        console.log(compass)\r\n        this.setState({compass: compass})\r\n        // compassCircle.style.transform = `translate(-50%, -50%) rotate(${-compass}deg)`;\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            compass {this.state.compass}\r\n        </div>\r\n    }\r\n}\r\n","import { Paper, Stack } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react'\r\nimport { DirectionArrow } from './direction/DirectionArrow';\r\nimport \"./Stations.css\"\r\n\r\nlet googleNearbyAPI = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\";\r\nconst googleDistanceAPI = \"https://maps.googleapis.com/maps/api/distancematrix/json?\"\r\n\r\nconst MAX_STATION_AMOUNT = 10;\r\n\r\n\r\nclass Stations extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            stations: []\r\n        }\r\n    }\r\n\r\n    isStationInList(stations, stationName) {\r\n        for (const station of stations) {\r\n            if (station[\"name\"] === stationName)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateStationsFromResponse(response) {\r\n        var stationsCopy = this.state.stations.slice()\r\n\r\n        for (const element of response['results']) {\r\n            if (stationsCopy.length >= MAX_STATION_AMOUNT)\r\n                break\r\n\r\n            if (!this.isStationInList(stationsCopy, element[\"name\"])){\r\n                stationsCopy.push(\r\n                    {\r\n                        \"name\": element[\"name\"],\r\n                        \"id\": element[\"place_id\"],\r\n                        \"latitude\": element[\"geometry\"][\"location\"][\"lat\"],\r\n                        \"longitude\": element[\"geometry\"][\"location\"][\"lng\"],\r\n                        \"types\": element[\"types\"],\r\n                    }\r\n                )\r\n            }\r\n        }\r\n\r\n        this.setState({stations: stationsCopy})\r\n    }\r\n\r\n    reloadStationsList() {\r\n\r\n        var params = new URLSearchParams({\r\n            key: process.env.REACT_APP_GOOGLE_API_KEY,\r\n            location: this.props.latitude + \", \" + this.props.longitude,\r\n            rankby: \"distance\",\r\n            type: \"train_station\"\r\n        })\r\n        const apiRequest = googleNearbyAPI + params\r\n\r\n        fetch(\r\n            process.env.REACT_APP_CORS_PROXY_URL.concat(apiRequest), \r\n            {\r\n                method: 'GET',\r\n                headers: {'Content-Type':'application/json'},\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => this.updateStationsFromResponse(data))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadStationsList()\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n                    <div>Current location: {this.props.latitude} {this.props.longitude}</div>\r\n                    <DirectionArrow></DirectionArrow>\r\n                    {/* <React.StrictMode> */}\r\n                        <StationsList stations={this.state.stations} currentLongitude={this.props.longitude} currentLatitude={this.props.latitude}></StationsList>\r\n                    {/* </React.StrictMode> */}\r\n                </div>;\r\n    }\r\n}\r\n\r\n\r\nexport default Stations;\r\n\r\nclass StationsList extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    getStations() {\r\n        return this.props.stations.map(element => {\r\n            return <Station \r\n                name={element[\"name\"]} key={element[\"id\"]} \r\n                station={element}\r\n                currentLatitude={ this.props.currentLatitude } currentLongitude={this.props.currentLongitude}>\r\n            </Station>\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return <Stack\r\n            direction=\"column\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={2}>\r\n                {this.getStations()}\r\n            </Stack>;\r\n    }\r\n}\r\n\r\nclass Station extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                distance: \"\",\r\n                duration: \"\"\r\n            }\r\n            this.requestDistanceAPI()\r\n        }\r\n    \r\n        isBusStation() {\r\n            return this.props.station[\"types\"].includes(\"bus_station\")\r\n        }\r\n    \r\n        isTrainStation() {\r\n            return this.props.station[\"types\"].includes(\"train_station\")\r\n        }\r\n    \r\n        handleDistanceResponse(response) {\r\n            if (response[\"rows\"].length === 0 || response[\"rows\"][0][\"elements\"].length === 0) {\r\n                return\r\n            }\r\n    \r\n            var firstElement = response[\"rows\"][0][\"elements\"][0]\r\n    \r\n            var newState = {\r\n                distance: firstElement[\"distance\"][\"text\"],\r\n                duration: firstElement[\"duration\"][\"text\"]\r\n            }\r\n    \r\n            this.setState(newState);\r\n        }\r\n    \r\n        requestDistanceAPI() {\r\n            var params = new URLSearchParams({\r\n                key: process.env.REACT_APP_GOOGLE_API_KEY,\r\n                destinations: \"place_id:\" + this.props.station[\"id\"],\r\n                origins: this.props.currentLatitude + \", \" + this.props.currentLongitude,\r\n                mode: \"walking\"\r\n            })\r\n            const apiRequest = googleDistanceAPI + params\r\n\r\n            fetch(process.env.REACT_APP_CORS_PROXY_URL.concat(apiRequest))\r\n            .then(response => response.json())\r\n            .then(data => this.handleDistanceResponse(data))\r\n        }\r\n\r\n        componentDidMount() {\r\n            \r\n        }\r\n    \r\n        render() {\r\n            return  <Paper variant=\"elevation\" elevation={4}>\r\n                        <Box sx={{width: 300, height: 100, fontFamily: \"Jetbrains Mono, monospace\", fontWeight: 600, fontSize: \"1.2em\", padding: \"10px\", borderRadius: \"10px\"}}>\r\n                            <div className=\"station-box\">\r\n                                <div>\r\n                                    <div>\r\n                                        {\r\n                                            this.isTrainStation() &&\r\n                                            <img className=\"transport-icon\" src={\"/train-public-transport.png\"} />\r\n                                        }\r\n                                        {\r\n                                            this.isBusStation() &&\r\n                                            <img className=\"transport-icon\" src={\"/bus-public-transport.png\"} />\r\n                                        }\r\n                                    </div>\r\n                                    <div>{this.props.name}</div>\r\n                                    <div className=\"station-info\">\r\n                                        <div>{this.state.distance}</div>\r\n                                        <div>{this.state.duration}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Box>\r\n                    </Paper>\r\n        }\r\n    }\r\n\r\n\r\n// function getLocation(setLatitude, setLongitude) {\r\n//     if(navigator.geolocation) {\r\n//         navigator.geolocation.getCurrentPosition(function(position) {\r\n//           setLatitude(position.coords.latitude)\r\n//           setLongitude(position.coords.longitude)\r\n//         })\r\n//     } else {\r\n//         alert(\"Sorry, your browser does not support HTML5 geolocation.\");\r\n//     }\r\n// }\r\n\r\n","import './App.css';\nimport Stations from \"./stations/Stations\"\nimport React, { useState } from 'react';\nimport { AppBar } from '@mui/material';\n\nconst App = () => {\n\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n\n  if(navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      setLatitude(position.coords.latitude)\n      setLongitude(position.coords.longitude)\n    })\n  } else {\n    alert(\"Sorry, your browser does not support HTML5 geolocation.\");\n  }\n\n  var renderStations = () => {\n    if (latitude != null && longitude != null) {\n      return <Stations latitude={latitude} longitude={longitude}></Stations>;\n    }\n  }\n\n  return (\n    <div>\n      <header>\n        <AppBar className='App-header' position=\"static\" color=\"default\" variant=\"elevation\">\n          <img className='bar-logo' src='/icon.png'></img>\n          <span>City Navigator</span>\n        </AppBar>\n      </header>\n      <main>\n        {renderStations()}\n      </main>\n      <footer><a href=\"https://www.flaticon.com/free-icons/\" title=\"icons\">Icons created by Google - Flaticon</a></footer>\n    </div>\n  );\n}\n  \n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App'\nimport './index.css';\n\nrequire('dotenv').config()\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}